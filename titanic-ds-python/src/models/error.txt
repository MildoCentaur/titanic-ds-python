/home/alejandro_mildiner/anaconda3/lib/python3.7/site-packages/sklearn/metrics/classification.py:1437: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples.
  'precision', 'predicted', average, warn_for)
[Parallel(n_jobs=3)]: Using backend LokyBackend with 3 concurrent workers.
[Parallel(n_jobs=3)]: Done  26 tasks      | elapsed:    3.8s
[Parallel(n_jobs=3)]: Done 1478 tasks      | elapsed:   11.4s
[Parallel(n_jobs=3)]: Done 4038 tasks      | elapsed:   27.6s
[Parallel(n_jobs=3)]: Done 7622 tasks      | elapsed:   57.7s
[Parallel(n_jobs=3)]: Done 11902 tasks      | elapsed:  2.2min
[Parallel(n_jobs=3)]: Done 14718 tasks      | elapsed:  3.3min
[Parallel(n_jobs=3)]: Done 17626 tasks      | elapsed:  4.9min
[Parallel(n_jobs=3)]: Done 20302 tasks      | elapsed:  6.0min
[Parallel(n_jobs=3)]: Done 29006 tasks      | elapsed:  7.3min
[Parallel(n_jobs=3)]: Done 35198 tasks      | elapsed:  9.5min
[Parallel(n_jobs=3)]: Done 39098 tasks      | elapsed: 11.3min
[Parallel(n_jobs=3)]: Done 50874 tasks      | elapsed: 13.4min
[Parallel(n_jobs=3)]: Done 57274 tasks      | elapsed: 16.1min
[Parallel(n_jobs=3)]: Done 64186 tasks      | elapsed: 17.0min
[Parallel(n_jobs=3)]: Done 71610 tasks      | elapsed: 18.9min
[Parallel(n_jobs=3)]: Done 79546 tasks      | elapsed: 21.4min
[Parallel(n_jobs=3)]: Done 87994 tasks      | elapsed: 22.9min
[Parallel(n_jobs=3)]: Done 96000 out of 96000 | elapsed: 25.8min finished
Traceback (most recent call last):
  File "predict_lgbm.py", line 159, in <module>
    predictions()
  File "predict_lgbm.py", line 141, in predictions
    lgbm_model = create_lgbm_optimized_model(X_train, y_train, X_test, y_test)
  File "predict_lgbm.py", line 90, in create_lgbm_optimized_model
    model, metrics = do_generate_metrics_lgbm_optimazed_model(X_train, y_train, X_test, y_test, grid)
  File "predict_lgbm.py", line 63, in do_generate_metrics_lgbm_optimazed_model
    file_operations.write_logs(FILENAME,"Generated model params and results\n params:" + str(model.get_params()) + "\nscore " + model.score(X_test, y_test))
TypeError: can only concatenate str (not "numpy.float64") to str
